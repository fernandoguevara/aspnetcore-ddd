// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notes.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Notes.Infrastructure.Migrations.Postgres
{
    [DbContext(typeof(PostgresNoteContext))]
    partial class PostgresNoteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Notes.Domain.AggregatesModel.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("_createdAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime>("_modifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ModifiedAt");

                    b.Property<Guid>("_userId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("Notes.Domain.AggregatesModel.NoteAggregate.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("NoteId")
                        .HasColumnType("uuid");

                    b.Property<string>("_action")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Action");

                    b.Property<DateTime>("_createdAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedAt");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Notes.Domain.AggregatesModel.NoteAggregate.Email", b =>
                {
                    b.HasOne("Notes.Domain.AggregatesModel.Note", null)
                        .WithMany("EmailActions")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Notes.Domain.AggregatesModel.Note", b =>
                {
                    b.Navigation("EmailActions");
                });
#pragma warning restore 612, 618
        }
    }
}
